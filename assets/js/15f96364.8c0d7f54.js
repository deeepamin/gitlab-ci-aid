"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[189],{6218:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/convert-to-folded-f813fb83aa6dbf66bcd51cb7e2273256.png"},6763:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"features/script-injection","title":"Script Injection","description":"Shell script is injected into the script, beforescript, and afterscript sections in the GitLab CI YAML files. This allows you to write shell commands directly in the YAML file, or they can be edited as standalone shell script editor using Edit Shell Script Fragment context action.","source":"@site/docs/features/script-injection.md","sourceDirName":"features","slug":"/features/script-injection","permalink":"/gitlab-ci-aid/docs/features/script-injection","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Schema Provision","permalink":"/gitlab-ci-aid/docs/features/schema-provision"},"next":{"title":"Syntax Highlighting","permalink":"/gitlab-ci-aid/docs/features/syntax-highlighting"}}');var s=i(4848),c=i(8453);const o={},r="Script Injection",l={},a=[{value:"Known Limitation",id:"known-limitation",level:3}];function d(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",img:"img",p:"p",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"script-injection",children:"Script Injection"})}),"\n",(0,s.jsxs)(t.p,{children:["Shell script is injected into the ",(0,s.jsx)(t.code,{children:"script"}),", ",(0,s.jsx)(t.code,{children:"before_script"}),", and ",(0,s.jsx)(t.code,{children:"after_script"})," sections in the GitLab CI YAML files. This allows you to write shell commands directly in the YAML file, or they can be edited as standalone shell script editor using ",(0,s.jsx)(t.code,{children:"Edit Shell Script Fragment"})," context action."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"img/edit-shell-script-fragment.png",src:i(9912).A+"",width:"1024",height:"270"})}),"\n",(0,s.jsxs)(t.p,{children:["If you have ",(0,s.jsx)(t.code,{children:"BashSupport Pro"})," plugin installed and license configured, the shell script will be highlighted and inspected using the ",(0,s.jsx)(t.code,{children:"BashSupport Pro"})," shell editor."]}),"\n",(0,s.jsx)(t.h3,{id:"known-limitation",children:"Known Limitation"}),"\n",(0,s.jsx)(t.p,{children:"Currently, the plugin injects shell script into the sequence item (-) sections and YAML literal blocks (|). Due to weird editing issues in folding block (>) injection is not supported.\nInstead, plugin provides an intent action to convert the folding block to a literal block, so you can use shell script injection in it."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"img/convert-to-folded.png",src:i(6218).A+"",width:"835",height:"165"})})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>r});var n=i(6540);const s={},c=n.createContext(s);function o(e){const t=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(c.Provider,{value:t},e.children)}},9912:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/edit-shell-script-fragment-a701c99ea0368a033cd9f4b5519f821e.png"}}]);