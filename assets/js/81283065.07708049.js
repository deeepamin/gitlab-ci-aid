"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[34],{203:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/inspections-96f4d1207812f14f1820e73eb2bf5532.png"},6963:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"features/inspections","title":"Inspections","description":"Inspections are a way to check the correctness of your GitLab CI/CD YAML files. They help you identify potential issues, such as syntax errors, missing files, or undefined jobs. The inspections are run automatically when you open a YAML file in the editor.","source":"@site/docs/features/inspections.md","sourceDirName":"features","slug":"/features/inspections","permalink":"/gitlab-ci-aid/docs/features/inspections","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GitLab CI YAML Detection","permalink":"/gitlab-ci-aid/docs/features/gitlab-ci-yaml-detection"},"next":{"title":"Navigation","permalink":"/gitlab-ci-aid/docs/features/navigation"}}');var t=n(4848),c=n(8453);const a={},l="Inspections",o={},r=[{value:"Available Inspections",id:"available-inspections",level:2},{value:"Unavailable local include file",id:"unavailable-local-include-file",level:3},{value:"Unavailable script file",id:"unavailable-script-file",level:3},{value:"Undefined need",id:"undefined-need",level:3}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"inspections",children:"Inspections"})}),"\n",(0,t.jsxs)(i.p,{children:["Inspections are a way to check the correctness of your GitLab CI/CD YAML files. They help you identify potential issues, such as syntax errors, missing files, or undefined jobs. The inspections are run automatically when you open a YAML file in the editor.\nAvailable inspections can be found in the ",(0,t.jsx)(i.code,{children:"Settings > Editor > Inspections > Gitlab CI inpsections "})," section. User can configure their scope, severity levels and highlighting."]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{alt:"img/inspections.png",src:n(203).A+"",width:"1049",height:"225"})}),"\n",(0,t.jsx)(i.h2,{id:"available-inspections",children:"Available Inspections"}),"\n",(0,t.jsx)(i.h3,{id:"unavailable-local-include-file",children:"Unavailable local include file"}),"\n",(0,t.jsxs)(i.p,{children:["This inspection checks if the local file included (",(0,t.jsx)(i.code,{children:"include"})," keyword) is available in the project. If the file is not found, it will show an error in the editor.\nUser can also quick fix the issue by plugin provided quick fix. (",(0,t.jsx)(i.a,{href:"./quick-fixes#missing-local-file-include",children:"Create include file"}),")"]}),"\n",(0,t.jsx)(i.h3,{id:"unavailable-script-file",children:"Unavailable script file"}),"\n",(0,t.jsxs)(i.p,{children:["This inspection checks if the script file included (",(0,t.jsx)(i.code,{children:"script"}),", ",(0,t.jsx)(i.code,{children:"before_script"}),", ",(0,t.jsx)(i.code,{children:"after_script"})," keywords) is available in the project. If the file is not found, it will show an error in the editor.\nUser can also quick fix the issue by plugin provided quick fix. (",(0,t.jsx)(i.a,{href:"./quick-fixes#missing-script-file",children:"Create script"}),")"]}),"\n",(0,t.jsx)(i.h3,{id:"undefined-need",children:"Undefined need"}),"\n",(0,t.jsxs)(i.p,{children:["If a job has a ",(0,t.jsx)(i.code,{children:"needs"})," keyword, this inspection checks if the job is defined in the included or user marked YAMLs. If the job is not found, it will show an error in the editor."]})]})}function h(e={}){const{wrapper:i}={...(0,c.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>l});var s=n(6540);const t={},c=s.createContext(t);function a(e){const i=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(c.Provider,{value:i},e.children)}}}]);